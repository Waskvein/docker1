#  Файл Docker-compose должен начинаться с тега версии
version: '3'
# Следует учитывать что docker-compose работает с сервисами
# 1 сервис = 1 контейнере
# Сервисом может быть клиент, сервер, сервер баз данных
# Раздел в котором будут описаны сервисы, начинаются с 'services'
services:
  # Мы собираемся создать клиентское и серверное приложения
  # Значит нам нужно два сервиса
  # Первый сервис(контейнер): сервера
  # Назвать его можно как угодно
  # Понятное название сервиса помогает определить его роль
  # Здесь для именования соответствующего сервиса используем ключевое слово 'server'
  server:
    # Ключевое слово "build" позволяет
    # задать путь к файлу Dockerfile, который нужно использовать для создания образа
    # который позволит запустить сервис
    # Здесь 'server/' соответствует пути к папке сервера
    # Который содержит соответствующий Dockerfile
    build: server/
    # Команда, которую нужно запустить после создания образа
    # Эта команда означает запуск "python ./server.py"
    command: python ./server.py
    # В качестве порта в 'server/server.py' указан порт 1234
    # Если мы хотим обратиться к серверу с нашего компьютера(находясь за пределами контейнера)
    # мы долнжны организовать перенаправление этого порта на порт компьютера
    # Сделать это нам поможет ключевое слово 'ports'
    # При его использовании применяется следующая конструкция :[порт компьютера]:[порт контейнера]
    # Используем прот компьютера1234 и организуем связь с портом контейнера 1234
    ports:
      - 1234:1234
      # Второй сервис (контейнер): клиент.
      # Назван 'client'
  client:
    # Здесь 'client/' соответствует пути к папке, содержащей Dockerfile для клиентской части системы
     build: client/
     # Команда которую нужно запустить после создания образа
     # Следующая команда означает запуск "python ./client.py"
     command: python ./client.py
     # Ключевое слово 'network_mode' используется для описания типа сети
     # Тут мы указываем то, что контейнер может обращаться к 'localhost' компьютера
     network_mode: host
     # Ключевое слово 'depends_on'позволяет указывать должен ли сервис
     # прежде чем запуститься ждать, когда будут готовы к работе другие сервисы
     # Нам нужно чтобы сервис 'client' дождался бы готовности к работе сервиса 'server'
     depends_on:
      - server
